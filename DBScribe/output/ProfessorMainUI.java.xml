<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Boyang\Desktop\ASE15\subjects\UMAS\src\com\umas\frontend\ProfessorMainUI.java"><package>package <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>frontend</name></name>;</package>


<comment type="block" format="javadoc">/****************@author Simant Purohit*********************************/</comment>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>BorderLayout</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>EventQueue</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JFrame</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JPanel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>border</name><operator>.</operator><name>EmptyBorder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JTabbedPane</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Professor</name></name>;</import>


<class><specifier>public</specifier> class <name>ProfessorMainUI</name> <super><extends>extends <name>JPanel</name></extends></super> <block>{

	<comment type="block" format="javadoc">/**
	 * 
	 */</comment>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ProfessorUserUI</name></type> <name>profUser</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Professor</name></type> <name>professor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ProfessorCourseUI</name></type> <name>profCourseUI</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ProfessorMainUI</name></type> <name>professorMain</name></decl>;</decl_stmt>
	
	<comment type="block" format="javadoc">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<param><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>EventQueue</name><operator>.</operator><name>invokeLater</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Runnable</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{
				<try>try <block>{
					<decl_stmt><decl><type><name>ProfessorMainUI</name></type> <name>frame</name> <init>= <expr><operator>new</operator> <call><name>ProfessorMainUI</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><literal type="number">289</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name>frame</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch>catch <parameter_list>(<param><decl><type><name>Exception</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>ProfessorMainUI</name></type> <name>getInstance</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list><block>{
		<expr_stmt><expr><name>professorMain</name> <operator>=</operator> <operator>new</operator> <call><name>ProfessorMainUI</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>professorMain</name></expr>;</return>
	}</block></function>
	
	<comment type="block" format="javadoc">/**
	 * Create the frame.
	 */</comment>
	<constructor><specifier>private</specifier> <name>ProfessorMainUI</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name>professor</name> <operator>=</operator> <name>p</name></expr>;</expr_stmt>
		<comment type="line">//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</comment>
		<expr_stmt><expr><call><name>setBounds</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>, <argument><expr><literal type="number">650</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line">//contentPane = new JPanel();</comment>
		<expr_stmt><expr><call><name>setBorder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>EmptyBorder</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BorderLayout</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line">//setContentPane(contentPane);</comment>
		
		<decl_stmt><decl><type><name>JTabbedPane</name></type> <name>tabbedPane</name> <init>= <expr><operator>new</operator> <call><name>JTabbedPane</name><argument_list>(<argument><expr><name><name>JTabbedPane</name><operator>.</operator><name>TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>tabbedPane</name></expr></argument>, <argument><expr><name><name>BorderLayout</name><operator>.</operator><name>CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profUser</name> <operator>=</operator> <call><name><name>ProfessorUserUI</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>professor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>JPanel</name></type> <name>profUserPanel</name> <init>= <expr><name>profUser</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Manage my details"</literal></expr></argument>,<argument><expr><name>profUserPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profCourseUI</name> <operator>=</operator> <call><name><name>ProfessorCourseUI</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>professor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>JPanel</name></type> <name>profCoursePanel</name> <init>= <expr><name>profCourseUI</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Manage my courses"</literal></expr></argument>,<argument><expr><name>profCoursePanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>examPanel</name> <init>= <expr><operator>new</operator> <call><name>ProfessorExamPanel</name><argument_list>(<argument><expr><name>professor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Manage course exams"</literal></expr></argument>, <argument><expr><name>examPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>logOut</name> <init>= <expr><operator>new</operator> <call><name>LogOutUI</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Log out"</literal></expr></argument>, <argument><expr><name>logOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
	}</block></constructor>

}</block></class>
</unit>
