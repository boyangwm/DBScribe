<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Boyang\Desktop\ASE15\subjects\UMAS\src\com\umas\frontend\ProfessorExamPanel.java"><package>package <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>frontend</name></name>;</package>


<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JPanel</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>BorderLayout</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Rectangle</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JTabbedPane</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>CourseOffered</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Professor</name></name>;</import>



<class><specifier>public</specifier> class <name>ProfessorExamPanel</name> <super><extends>extends <name>JPanel</name></extends></super> <block>{

	<decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>Professor</name></type> <name>professor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>JTabbedPane</name></type> <name>tabbedPane</name></decl>;</decl_stmt>
	<comment type="block" format="javadoc">/**
	 * Create the panel.
	 */</comment>
	<constructor><specifier>public</specifier> <name>ProfessorExamPanel</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name>professor</name> <operator>=</operator> <name>p</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setBounds</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Rectangle</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BorderLayout</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>tabbedPane</name> <operator>=</operator> <operator>new</operator> <call><name>JTabbedPane</name><argument_list>(<argument><expr><name><name>JTabbedPane</name><operator>.</operator><name>TOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>tabbedPane</name></expr></argument>, <argument><expr><name><name>BorderLayout</name><operator>.</operator><name>CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>initialize</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

		
	}</block></constructor>
	
	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>initialize</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>removeAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>revalidate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>repaint</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>CourseOffered</name></argument>&gt;</argument_list></name></type> <name>courses</name> <init>= <expr><call><name><name>CourseOffered</name><operator>.</operator><name>getCurrentProfessorCourses</name></name><argument_list>(<argument><expr><name>professor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Professor has "</literal><operator>+</operator><call><name><name>courses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">" courses"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>CourseOffered</name></type> <name>co</name><range>:<expr><name>courses</name></expr></range></decl></init>)</control><block>{
			<decl_stmt><decl><type><name>JPanel</name></type> <name>p</name> <init>= <expr><operator>new</operator> <call><name>CourseExamsUI</name><argument_list>(<argument><expr><name>co</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><call><name><name>co</name><operator>.</operator><name>getCourseName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>revalidate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>repaint</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>revalidate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>repaint</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></for>

		
	}</block></function>

}</block></class>
</unit>
