<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Boyang\Desktop\ASE15\subjects\UMAS\src\com\umas\frontend\ProfessorCourseUI.java"><package>package <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>frontend</name></name>;</package>


<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>BorderLayout</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>EventQueue</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardCopyOption</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashSet</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>DefaultComboBoxModel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JPanel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>border</name><operator>.</operator><name>EmptyBorder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>DefaultListModel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JComboBox</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JFileChooser</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JList</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JButton</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JOptionPane</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>ListSelectionModel</name></name>;</import>



<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>ActionListener</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>ActionEvent</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JSeparator</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Color</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JLabel</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Course</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>CourseOffered</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>DBAnnotation</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Database</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Professor</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Course</name><operator>.</operator><name>CourseDoesNotExistException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>CourseOffered</name><operator>.</operator><name>CourseOfferingDoesNotExistException</name></name>;</import>


<comment type="block" format="javadoc">/****************@author Simant Purohit*********************************/</comment>

<class><specifier>public</specifier> class <name>ProfessorCourseUI</name> <super><extends>extends <name>JPanel</name></extends></super> <block>{

	
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Professor</name></type> <name>professor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>final</specifier> <specifier>private</specifier> <name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>courseOfferingCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name><name>JList</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>existingFilesList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>JList</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newFilesList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>HashMap</name><argument_list type="template">&lt;<argument><name>CourseOffered</name></argument>, <argument><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>courseFiles</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="template">&lt;<argument><name>CourseOffered</name></argument>, <argument><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>LinkedHashSet</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>addFileList</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashSet</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JButton</name></type> <name>btnNewButton_3</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JSeparator</name></type> <name>separator</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>lblCurrentCourseDocuments</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>lblAddNewDocuments</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JSeparator</name></type> <name>separator_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>lblSelectCourse</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ProfessorCourseUI</name></type> <name>profCourseUI</name></decl>;</decl_stmt>
	

	<comment type="block" format="javadoc">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<param><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>EventQueue</name><operator>.</operator><name>invokeLater</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Runnable</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{
				<try>try <block>{
					<decl_stmt><decl><type><name>ProfessorCourseUI</name></type> <name>frame</name> <init>= <expr><operator>new</operator> <call><name>ProfessorCourseUI</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><literal type="number">289</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name>frame</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch>catch <parameter_list>(<param><decl><type><name>Exception</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>ProfessorCourseUI</name></type> <name>getInstance</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list><block>{
		<expr_stmt><expr><name>profCourseUI</name> <operator>=</operator> <operator>new</operator> <call><name>ProfessorCourseUI</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>profCourseUI</name></expr>;</return>
	}</block></function>
	
	<constructor><specifier>private</specifier> <name>ProfessorCourseUI</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name>professor</name> <operator>=</operator> <name>p</name></expr>;</expr_stmt>
		<comment type="line">//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</comment>
		<expr_stmt><expr><call><name>setBounds</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setBorder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>EmptyBorder</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BorderLayout</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>panel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>panel</name></expr></argument>, <argument><expr><name><name>BorderLayout</name><operator>.</operator><name>CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>courseOfferingCombo</name> <operator>=</operator> <operator>new</operator> <call><name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>arg0</name></decl></param>)</parameter_list> <block>{
				<decl_stmt><decl><type><name>int</name></type> <name>offerID</name> <init>= <expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>addFileList</name><operator>.</operator><name>removeAll</name></name><argument_list>(<argument><expr><name>addFileList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>initializeAddFileList</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				<try>try <block>{
					<decl_stmt><decl><type><name>CourseOffered</name></type> <name>co</name> <init>= <expr><operator>new</operator> <call><name>CourseOffered</name><argument_list>(<argument><expr><name>offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name>initializeCurrentFilesList</name><argument_list>(<argument><expr><name>co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Course</name><operator>.</operator><name>CourseDoesNotExistException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>CourseOffered</name><operator>.</operator><name>CourseOfferingDoesNotExistException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">288</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">205</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>courseOfferingCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newFilesList</name> <operator>=</operator> <operator>new</operator> <call><name><name>JList</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newFilesList</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">71</literal></expr></argument>, <argument><expr><literal type="number">645</literal></expr></argument>, <argument><expr><literal type="number">91</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newFilesList</name><operator>.</operator><name>setSelectionMode</name></name><argument_list>(<argument><expr><name><name>ListSelectionModel</name><operator>.</operator><name>SINGLE_SELECTION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newFilesList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>existingFilesList</name> <operator>=</operator> <operator>new</operator> <call><name><name>JList</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>existingFilesList</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">235</literal></expr></argument>, <argument><expr><literal type="number">754</literal></expr></argument>, <argument><expr><literal type="number">271</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>existingFilesList</name><operator>.</operator><name>setSelectionMode</name></name><argument_list>(<argument><expr><name><name>ListSelectionModel</name><operator>.</operator><name>SINGLE_SELECTION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>existingFilesList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnaddNewFile</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Add New"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnaddNewFile</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				<decl_stmt><decl><type><name>JFileChooser</name></type> <name>fc</name> <init>= <expr><operator>new</operator> <call><name>JFileChooser</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>int</name></type> <name>retVal</name> <init>= <expr><call><name><name>fc</name><operator>.</operator><name>showDialog</name></name><argument_list>(<argument><expr><name><name>ProfessorCourseUI</name><operator>.</operator><name>this</name></name></expr></argument>,
				        <argument><expr><literal type="string">"Attach"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><name>retVal</name> <operator>==</operator> <name><name>JFileChooser</name><operator>.</operator><name>APPROVE_OPTION</name></name></expr>)</condition><then><block>{
					<decl_stmt><decl><type><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name></type> <name>newFile</name> <init>= <expr><call><name><name>fc</name><operator>.</operator><name>getSelectedFile</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>newFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>addFileList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>newFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>initializeAddFileList</name><argument_list>()</argument_list></call></expr>;</expr_stmt>						
				}</block></then></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnaddNewFile</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">665</literal></expr></argument>, <argument><expr><literal type="number">68</literal></expr></argument>, <argument><expr><literal type="number">99</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnaddNewFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnNewButton_1</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Delete file from course"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_1</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				<if>if<condition>(<expr><call><name><name>existingFilesList</name><operator>.</operator><name>getModel</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSize</name><argument_list>()</argument_list></call><operator>&lt;=</operator><literal type="number">0</literal> <operator>||</operator> <call><name><name>courseOfferingCombo</name><operator>.</operator><name>getItemCount</name></name><argument_list>()</argument_list></call><operator>&lt;=</operator><literal type="number">0</literal></expr>)</condition><then><block>{
					<comment type="line">//show a message</comment>
					<return>return;</return>
				}</block></then></if>
				
				<decl_stmt><decl><type><name>String</name></type> <name>file</name> <init>= <expr><call><name><name>existingFilesList</name><operator>.</operator><name>getSelectedValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>String</name></type> <name>fileName</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name>index</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>int</name></type> <name>offerID</name> <init>= <expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>boolean</name></type> <name>deleteFlag</name> <init>= <expr><call><name><name>f</name><operator>.</operator><name>deleteFileFromDB</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<if>if<condition>(<expr><name>deleteFlag</name></expr>)</condition><then><block>{					
					<try>try <block>{
						<decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name>boolean</name></type> <name>deleted</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if>if<condition>(<expr><name>deleted</name></expr>)</condition><then><block>{
							<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Successfully deleted file from course"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
						
						<expr_stmt><expr><call><name>initializeCurrentFilesList</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CourseOffered</name><argument_list>(<argument><expr><name>offerID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
					}</block> <catch>catch <parameter_list>(<param><decl><type><name>IOException</name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
						<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>e1</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>Course</name><operator>.</operator><name>CourseDoesNotExistException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
						<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>e1</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>CourseOffered</name><operator>.</operator><name>CourseOfferingDoesNotExistException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
						<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>e1</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
					
				}</block></then></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_1</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">231</literal></expr></argument>, <argument><expr><literal type="number">517</literal></expr></argument>, <argument><expr><literal type="number">325</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnNewButton_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnNewButton_2</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Add all to course"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_2</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				<decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Select a course first"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
				}</block></then></if>
				
				<if>if<condition>(<expr><call><name><name>newFilesList</name><operator>.</operator><name>getModel</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSize</name><argument_list>()</argument_list></call><operator>&lt;=</operator><literal type="number">0</literal></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Add a file first"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
				}</block></then></if>
				
				<try>try <block>{
					<decl_stmt><decl><type><name>CourseOffered</name></type> <name>co</name> <init>= <expr><operator>new</operator> <call><name>CourseOffered</name><argument_list>(<argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"offerID"</literal></expr></argument>, <argument><expr><literal type="string">"coursesoffered"</literal></expr></argument>, <argument><expr><literal type="string">"OfferID"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name>int</name></type> <name>offerID</name> <init>= <expr><call><name><name>co</name><operator>.</operator><name>getOfferID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
					<for>for<control>(<init><decl><type><name>String</name></type> <name>s</name><range>:<expr><name>addFileList</name></expr></range></decl></init>)</control><block>{
						<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"File:"</literal><operator>+</operator><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>copyFile</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>offerID</name></expr></argument>, <argument><expr><call><name><name>co</name><operator>.</operator><name>getCourseName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					

					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Successfully added files to course"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>addFileList</name><operator>.</operator><name>removeAll</name></name><argument_list>(<argument><expr><name>addFileList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name>co</name><operator>=</operator> <operator>new</operator> <call><name>CourseOffered</name><argument_list>(<argument><expr><name>offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>initializeCurrentFilesList</name><argument_list>(<argument><expr><name>co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>initializeCoursesAndFiles</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>setSelectedIndex</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Course</name><operator>.</operator><name>CourseDoesNotExistException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>CourseOffered</name><operator>.</operator><name>CourseOfferingDoesNotExistException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_2</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">173</literal></expr></argument>, <argument><expr><literal type="number">645</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnNewButton_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>btnNewButton_3</name> <operator>=</operator> <operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_3</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				<decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><call><name><name>newFilesList</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><name>index</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Not file selected"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>ERROR_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
				}</block></then></if>
				<expr_stmt><expr><call><name><name>addFileList</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>newFilesList</name><operator>.</operator><name>getSelectedValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>initializeAddFileList</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton_3</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">665</literal></expr></argument>, <argument><expr><literal type="number">139</literal></expr></argument>, <argument><expr><literal type="number">99</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnNewButton_3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>separator</name> <operator>=</operator> <operator>new</operator> <call><name>JSeparator</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator</name><operator>.</operator><name>setBackground</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">204</literal></expr></argument>, <argument><expr><literal type="number">754</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>separator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>lblCurrentCourseDocuments</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Current course documents"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblCurrentCourseDocuments</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">269</literal></expr></argument>, <argument><expr><literal type="number">210</literal></expr></argument>, <argument><expr><literal type="number">171</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblCurrentCourseDocuments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>lblAddNewDocuments</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Add new documents list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblAddNewDocuments</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">269</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">155</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblAddNewDocuments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>separator_1</name> <operator>=</operator> <operator>new</operator> <call><name>JSeparator</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator_1</name><operator>.</operator><name>setBackground</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator_1</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>separator_1</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>, <argument><expr><literal type="number">754</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>separator_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>lblSelectCourse</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Select Course"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblSelectCourse</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">197</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">81</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblSelectCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name>initializeCoursesAndFiles</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeCoursesAndFiles</name><parameter_list>()</parameter_list><block>{
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>CourseOffered</name></argument>&gt;</argument_list></name></type> <name>courses</name> <init>= <expr><call><name><name>CourseOffered</name><operator>.</operator><name>getCurrentProfessorCourses</name></name><argument_list>(<argument><expr><name>professor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>model</name> <init>= <expr><operator>new</operator> <call><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>courseFiles</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		
		<for>for<control>(<init><decl><type><name>CourseOffered</name></type> <name>co</name><range>:<expr><name>courses</name></expr></range></decl></init>)</control><block>{
			<expr_stmt><expr><call><name><name>model</name><operator>.</operator><name>addElement</name></name><argument_list>(<argument><expr><call><name><name>co</name><operator>.</operator><name>getOfferID</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name><name>co</name><operator>.</operator><name>getFiles</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>courseFiles</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>co</name></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if>if<condition>(<expr><call><name><name>model</name><operator>.</operator><name>getSize</name></name><argument_list>()</argument_list></call><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><call><name><name>courseOfferingCombo</name><operator>.</operator><name>setSelectedIndex</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
		
	}</block></function>
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeCurrentFilesList</name><parameter_list>(<param><decl><type><name>CourseOffered</name></type> <name>co</name></decl></param>)</parameter_list><block>{
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name><name>co</name><operator>.</operator><name>getFiles</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>DefaultListModel</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>model</name> <init>= <expr><operator>new</operator> <call><name><name>DefaultListModel</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<for>for<control>(<init><decl><type><name>File</name></type> <name>f</name><range>:<expr><name>files</name></expr></range></decl></init>)</control><block>{
			<expr_stmt><expr><call><name><name>model</name><operator>.</operator><name>addElement</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getFileLocation</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">"\\"</literal><operator>+</operator><call><name><name>f</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name>existingFilesList</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
	}</block></function>

	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeAddFileList</name><parameter_list>()</parameter_list><block>{
		<decl_stmt><decl><type><name><name>DefaultListModel</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>model</name> <init>= <expr><operator>new</operator> <call><name><name>DefaultListModel</name><argument_list type="template">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>String</name></type> <name>f</name><range>:<expr><name>addFileList</name></expr></range></decl></init>)</control><block>{
			<expr_stmt><expr><call><name><name>model</name><operator>.</operator><name>addElement</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name>newFilesList</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
	}</block></function>
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>copyFile</name><parameter_list>(<param><decl><type><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name></type> <name>file</name></decl></param>, <param><decl><type><name>int</name></type> <name>offerID</name></decl></param>, <param><decl><type><name>String</name></type> <name>courseName</name></decl></param>)</parameter_list><block>{
		<decl_stmt><decl><type><name>String</name></type> <name>dir</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>fileLocation</name> <init>= <expr><name>dir</name><operator>+</operator><literal type="string">"/Files/"</literal><operator>+</operator><name>courseName</name><operator>+</operator><literal type="string">"-"</literal><operator>+</operator><name>offerID</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>destDir</name> <init>= <expr><name>dir</name><operator>+</operator><literal type="string">"/Files/"</literal><operator>+</operator><name>courseName</name><operator>+</operator><literal type="string">"-"</literal><operator>+</operator><name>offerID</name><operator>+</operator><literal type="string">"/"</literal><operator>+</operator><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>fileLocForDB</name> <init>= <expr><literal type="string">"/Files/"</literal><operator>+</operator><name>courseName</name><operator>+</operator><literal type="string">"-"</literal><operator>+</operator><name>offerID</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Dest:"</literal><operator>+</operator><name>destDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"File:"</literal><operator>+</operator><call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<try>try <block>{
			<decl_stmt><decl><type><name>boolean</name></type> <name>flag</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>addFileToDB</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fileLocForDB</name></expr></argument>, <argument><expr><name>offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if<condition>(<expr><name>flag</name></expr>)</condition><then><block>{
				<expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCopyOption</name><operator>.</operator><name>REPLACE_EXISTING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>Database</name><operator>.</operator><name>commitTransaction</name></name><argument_list>(<argument><expr><call><name><name>Database</name><operator>.</operator><name>getConnection</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block> <catch>catch <parameter_list>(<param><decl><type><name>IOException</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
			<comment type="line">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>
}</block></class>
</unit>
