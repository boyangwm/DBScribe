<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Boyang\Desktop\ASE15\subjects\UMAS\src\com\umas\frontend\ProfessorUserUI.java"><package>package <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>frontend</name></name>;</package>


<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>BorderLayout</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>EventQueue</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>GridLayout</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JFrame</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JPanel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>DefaultComboBoxModel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JOptionPane</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JPasswordField</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JTabbedPane</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JButton</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JComboBox</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>ActionListener</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>ActionEvent</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JTextField</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JLabel</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JCheckBox</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>BoxLayout</name></name>;</import>



<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>DBAnnotation</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Department</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Employee</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Job</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>JobApplication</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Login</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>People</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Professor</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Student</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Department</name><operator>.</operator><name>DepartmentDoesNotExistException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Job</name><operator>.</operator><name>NoPermissionException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>umas</name><operator>.</operator><name>code</name><operator>.</operator><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Font</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Color</name></name>;</import>

<comment type="block" format="javadoc">/**
 * @author Akshay
 * 
 */</comment>

<comment type="block" format="javadoc">/*************** PROFESSORUSERUI.JAVA CLASS WAS WRITTEN BY AKSHAY THIRKATEH ********************************/</comment>

<class><specifier>public</specifier> class <name>ProfessorUserUI</name> <super><extends>extends <name>JPanel</name></extends></super> <block>{

	<comment type="block" format="javadoc">/**
	 * 
	 */</comment>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ProfessorUserUI</name></type> <name>profUserUI</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>getByJobID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name>LinkedHashMap</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>,<argument><name>Job</name></argument>&gt;</argument_list></name></type> <name>retreiveJobs</name><init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>, <argument><name>Job</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>	
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>profName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>profUIn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>profUserName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>profDept</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>profPosition</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><specifier>static</specifier> <name>Professor</name></type> <name>prof</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>static</specifier> <name>Department</name></type> <name>dept</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>UIN</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>newName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>presentName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>newUserName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>currentUserName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>currentPasswordTxt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>newPasswordTxt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>currentPasswordTxtLbl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JButton</name></type> <name>changePassword</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>newPasswordTxtLbl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>retGPA</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>retWorkExp</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JCheckBox</name></type> <name>retSkill2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JCheckBox</name></type> <name>retSkill3</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JCheckBox</name></type> <name>retSkill4</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JCheckBox</name></type> <name>retSkill5</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JCheckBox</name></type> <name>retSkill1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JPanel</name></type> <name>jobDetailsPanel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>currentOfficeHours</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>newOfficeHours</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>newOfficeAddress</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JLabel</name></type> <name>CurrentOfficeAddress</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>officeAddress</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>JTextField</name></type> <name>officeHours</name></decl>;</decl_stmt>
	
	
	
	<comment type="block" format="javadoc">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<param><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>EventQueue</name><operator>.</operator><name>invokeLater</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Runnable</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{
				<try>try <block>{
					<decl_stmt><decl><type><name>ProfessorUserUI</name></type> <name>frame</name> <init>= <expr><operator>new</operator> <call><name>ProfessorUserUI</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name>frame</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch>catch <parameter_list>(<param><decl><type><name>Exception</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier>public</specifier> <specifier>static</specifier> <name>ProfessorUserUI</name></type> <name>getInstance</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list><block>{
		<try>try <block>{
			<expr_stmt><expr><name>profUserUI</name> <operator>=</operator> <operator>new</operator> <call><name>ProfessorUserUI</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Department</name><operator>.</operator><name>DepartmentDoesNotExistException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
			
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return>return <expr><name>profUserUI</name></expr>;</return>
	}</block></function>
	
	
	<constructor><specifier>private</specifier> <name>ProfessorUserUI</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>p</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name><name>Department</name><operator>.</operator><name>DepartmentDoesNotExistException</name></name></expr></argument></throws> <block>{
		
		<expr_stmt><expr><name><name>ProfessorUserUI</name><operator>.</operator><name>prof</name></name><operator>=</operator><name>p</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"profDeptID"</literal></expr></argument>, <argument><expr><literal type="string">"people"</literal></expr></argument>, <argument><expr><literal type="string">"DepartmentID"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>profDeptID</name> <init>= <expr><call><name><name>prof</name><operator>.</operator><name>getDeptID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name>ProfessorUserUI</name><operator>.</operator><name>dept</name></name><operator>=</operator><operator>new</operator> <call><name>Department</name><argument_list>(<argument><expr><name>profDeptID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"UIN"</literal></expr></argument>, <argument><expr><literal type="string">"employee"</literal></expr></argument>, <argument><expr><literal type="string">"UIN"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>ProfessorUserUI</name><operator>.</operator><name>UIN</name></name><operator>=</operator><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setBounds</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">675</literal></expr></argument>, <argument><expr><literal type="number">473</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BorderLayout</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JTabbedPane</name></type> <name>tabbedPane</name> <init>= <expr><operator>new</operator> <call><name>JTabbedPane</name><argument_list>(<argument><expr><name><name>JTabbedPane</name><operator>.</operator><name>TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>tabbedPane</name></expr></argument>, <argument><expr><name><name>BorderLayout</name><operator>.</operator><name>CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>viewDetails</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"View Details"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>viewDetails</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profName</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"profNameGet"</literal></expr></argument>, <argument><expr><literal type="string">"people"</literal></expr></argument>, <argument><expr><literal type="string">"Name"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>profNameGet</name> <init>= <expr><call><name><name>prof</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>profNameGet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profUIn</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profUIn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"uin"</literal></expr></argument>, <argument><expr><literal type="string">"employee"</literal></expr></argument>, <argument><expr><literal type="string">"UIN"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>uin</name> <init>= <expr><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal><operator>+</operator><name>uin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profUserName</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">140</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profUserName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"profUserNameGet"</literal></expr></argument>, <argument><expr><literal type="string">"people"</literal></expr></argument>, <argument><expr><literal type="string">"UserName"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>profUserNameGet</name> <init>= <expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>profUserNameGet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profDept</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">180</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profDept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>dept</name><operator>.</operator><name>getDepartmentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>profPosition</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">222</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profPosition</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">"Professor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>profName_1</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>profName_1</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profName_1</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">155</literal></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profName_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>profUINLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"UIN"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>profUINLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>profUINLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">166</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>profUINLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>userName</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"User Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>userName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>userName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">126</literal></expr></argument>, <argument><expr><literal type="number">143</literal></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>deptOfProf</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Department"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>deptOfProf</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>deptOfProf</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">118</literal></expr></argument>, <argument><expr><literal type="number">183</literal></expr></argument>, <argument><expr><literal type="number">69</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>deptOfProf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>positionProf</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Position"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>positionProf</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>positionProf</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">143</literal></expr></argument>, <argument><expr><literal type="number">225</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>positionProf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>officeAddressLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Office Address"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>officeAddressLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddressLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">108</literal></expr></argument>, <argument><expr><literal type="number">265</literal></expr></argument>, <argument><expr><literal type="number">81</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>officeAddressLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>officeAddress</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">262</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>officeAddress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	
		<decl_stmt><decl><type><name>JLabel</name></type> <name>officeHoursLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Office Hours"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>officeHoursLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHoursLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">118</literal></expr></argument>, <argument><expr><literal type="number">306</literal></expr></argument>, <argument><expr><literal type="number">71</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>officeHoursLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>officeHours</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setDisabledTextColor</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">303</literal></expr></argument>, <argument><expr><literal type="number">101</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>viewDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>officeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeHours</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>panel_2</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Edit Details"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>panel_2</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>panel_2</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BoxLayout</name><argument_list>(<argument><expr><name>panel_2</name></expr></argument>, <argument><expr><name><name>BoxLayout</name><operator>.</operator><name>X_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JTabbedPane</name></type> <name>editDetailsPanel</name> <init>= <expr><operator>new</operator> <call><name>JTabbedPane</name><argument_list>(<argument><expr><name><name>JTabbedPane</name><operator>.</operator><name>TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>panel_2</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>editDetailsPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>EditNamePanel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>editDetailsPanel</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Change Name"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>EditNamePanel</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>currentNameLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Current Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>currentNameLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentNameLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">96</literal></expr></argument>, <argument><expr><literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">78</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentNameLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>presentName</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>presentName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>presentName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">202</literal></expr></argument>, <argument><expr><literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">96</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>presentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>newNameLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"New Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>newNameLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newNameLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">116</literal></expr></argument>, <argument><expr><literal type="number">134</literal></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newNameLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newName</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">202</literal></expr></argument>, <argument><expr><literal type="number">131</literal></expr></argument>, <argument><expr><literal type="number">96</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newName</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnUpdateName</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Update Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateName</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>arg0</name></decl></param>)</parameter_list> <block>{
				
				<if>if<condition>(<expr><call><name><name>newName</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Enter new name "</literal></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
					
				}</block></then></if>
				
				<decl_stmt><decl><type><name>boolean</name></type> <name>check</name><init>=<expr><call><name><name>prof</name><operator>.</operator><name>updateProfName</name></name><argument_list>(<argument><expr><call><name><name>newName</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<try>try <block>{
					<expr_stmt><expr><name>prof</name><operator>=</operator> <operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><name>UIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if>if<condition>(<expr><name>check</name></expr>)</condition><then>
					<block>{
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Name Updated "</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>initializeViewDetails</name><argument_list>(<argument><expr><name>prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
					}</block></then>
					<else>else<block>{	
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Name Not Updated "</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
					
				}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Access denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"This person does not exist in the database"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">190</literal></expr></argument>, <argument><expr><literal type="number">212</literal></expr></argument>, <argument><expr><literal type="number">118</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>EditNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnUpdateName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>edituserNamePanel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>editDetailsPanel</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Change User Name"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>edituserNamePanel</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>currentuserNameLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Current UserName"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>currentuserNameLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentuserNameLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">117</literal></expr></argument>, <argument><expr><literal type="number">92</literal></expr></argument>, <argument><expr><literal type="number">104</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentuserNameLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>DBAnnotation</name><operator>.</operator><name>annoate</name></name><argument_list>(<argument><expr><literal type="string">"profName"</literal></expr></argument>, <argument><expr><literal type="string">"people"</literal></expr></argument>, <argument><expr><literal type="string">"UserName"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>profName</name> <init>= <expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>currentUserName</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><name>profName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentUserName</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentUserName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">244</literal></expr></argument>, <argument><expr><literal type="number">92</literal></expr></argument>, <argument><expr><literal type="number">86</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentUserName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newUserName</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newUserName</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">244</literal></expr></argument>, <argument><expr><literal type="number">136</literal></expr></argument>, <argument><expr><literal type="number">86</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newUserName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newUserName</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>newUserNameLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Enter New Username"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>newUserNameLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newUserNameLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">117</literal></expr></argument>, <argument><expr><literal type="number">139</literal></expr></argument>, <argument><expr><literal type="number">117</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newUserNameLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnNewButton</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Update User Name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				
				<if>if<condition>(<expr><call><name><name>newUserName</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Enter new Username "</literal></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
					
				}</block></then></if>
				
				<decl_stmt><decl><type><name>boolean</name></type> <name>check</name><init>=<expr><call><name><name>prof</name><operator>.</operator><name>updateProfUserName</name></name><argument_list>(<argument><expr><call><name><name>newUserName</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<try>try <block>{
					<expr_stmt><expr><name>prof</name><operator>=</operator> <operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><name>UIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if>if<condition>(<expr><name>check</name></expr>)</condition><then><block>{
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"User Name Updated "</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>initializeViewDetails</name><argument_list>(<argument><expr><name>prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newUserName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Username Not Updated "</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>

				}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Access denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name></type> <name>e2</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"This person does not exist in the database"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e2</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				
							}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnNewButton</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">212</literal></expr></argument>, <argument><expr><literal type="number">146</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>edituserNamePanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnNewButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>editOfficeDetails</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>editDetailsPanel</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Edit Office Details"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>editOfficeDetails</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>currentOfficeHoursLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Current Office Hours"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeHoursLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeHoursLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">66</literal></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>, <argument><expr><literal type="number">114</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentOfficeHoursLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>currentOfficeHours</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeHours</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeHours</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeHours</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">214</literal></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentOfficeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>newOfficeHoursLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"New Office Hours"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>newOfficeHoursLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newOfficeHoursLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">86</literal></expr></argument>, <argument><expr><literal type="number">201</literal></expr></argument>, <argument><expr><literal type="number">94</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newOfficeHoursLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newOfficeHours</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newOfficeHours</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">214</literal></expr></argument>, <argument><expr><literal type="number">198</literal></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newOfficeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newOfficeHours</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>btnUpdateOfficeHours</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Update Office Details"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateOfficeHours</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>arg0</name></decl></param>)</parameter_list> <block>{
				
				<if>if<condition>(<expr><call><name><name>newOfficeHours</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>||</operator><call><name><name>newOfficeAddress</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Enter both details "</literal></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
					
				}</block></then></if>
				<try>try<block>{
					<decl_stmt><decl><type><name>boolean</name></type> <name>check</name><init>=<expr><call><name><name>Employee</name><operator>.</operator><name>updateEmpDetails</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>newOfficeAddress</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>newOfficeHours</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name>prof</name><operator>=</operator> <operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><name>UIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if>if<condition>(<expr><name>check</name></expr>)</condition><then>
					<block>{
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Employee Details Updated"</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>initializeViewDetails</name><argument_list>(<argument><expr><name>prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newOfficeAddress</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newOfficeHours</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{	
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Employee Details Not Updated"</literal></expr></argument>, <argument><expr><literal type="string">"Update"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
					
				}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Access denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name></type> <name>e2</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"This person does not exist in the database"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e2</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateOfficeHours</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>btnUpdateOfficeHours</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">155</literal></expr></argument>, <argument><expr><literal type="number">269</literal></expr></argument>, <argument><expr><literal type="number">159</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>btnUpdateOfficeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblNewOfficeAddress</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"New Office Address"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblNewOfficeAddress</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblNewOfficeAddress</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">73</literal></expr></argument>, <argument><expr><literal type="number">151</literal></expr></argument>, <argument><expr><literal type="number">107</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblNewOfficeAddress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newOfficeAddress</name> <operator>=</operator> <operator>new</operator> <call><name>JTextField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newOfficeAddress</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">214</literal></expr></argument>, <argument><expr><literal type="number">148</literal></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newOfficeAddress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newOfficeAddress</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>currentOfficeAddressLbl</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Current Office Address"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeAddressLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentOfficeAddressLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">53</literal></expr></argument>, <argument><expr><literal type="number">98</literal></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentOfficeAddressLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>CurrentOfficeAddress</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>CurrentOfficeAddress</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>CurrentOfficeAddress</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">214</literal></expr></argument>, <argument><expr><literal type="number">98</literal></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>editOfficeDetails</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>CurrentOfficeAddress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>changePswdPanel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>editDetailsPanel</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Change Password"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>changePswdPanel</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>currentPasswordTxt</name> <operator>=</operator> <operator>new</operator> <call><name>JPasswordField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">245</literal></expr></argument>, <argument><expr><literal type="number">86</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentPasswordTxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newPasswordTxt</name> <operator>=</operator> <operator>new</operator> <call><name>JPasswordField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">245</literal></expr></argument>, <argument><expr><literal type="number">137</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newPasswordTxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setColumns</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>currentPasswordTxtLbl</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Enter Current Password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentPasswordTxtLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>currentPasswordTxtLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">85</literal></expr></argument>, <argument><expr><literal type="number">89</literal></expr></argument>, <argument><expr><literal type="number">133</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>currentPasswordTxtLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>newPasswordTxtLbl</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Enter New Password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxtLbl</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxtLbl</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">105</literal></expr></argument>, <argument><expr><literal type="number">140</literal></expr></argument>, <argument><expr><literal type="number">113</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>newPasswordTxtLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>newPasswordTxtLbl</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JButton</name></type> <name>checkButton</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Check"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>checkButton</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>checkButton</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				
				<if>if<condition>(<expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Enter current Password"</literal></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
				}</block></then></if>
				
				<decl_stmt><decl><type><name>Login</name></type> <name>loginDetails</name><init>=<expr><operator>new</operator> <call><name>Login</name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toCharArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>boolean</name></type> <name>check</name><init>=<expr><call><name><name>loginDetails</name><operator>.</operator><name>authenticate</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>check</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if>if<condition>(<expr><name>check</name></expr>)</condition><then>
						
					<block>{
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Password OK"</literal></expr></argument>, <argument><expr><literal type="string">"Authenticate"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>currentPasswordTxtLbl</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newPasswordTxtLbl</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name>checkButton</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
					}</block></then>
				
					<else>else<block>{
						<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Password NOT OK"</literal></expr></argument>, <argument><expr><literal type="string">"Authenticate"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>checkButton</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">378</literal></expr></argument>, <argument><expr><literal type="number">85</literal></expr></argument>, <argument><expr><literal type="number">89</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>checkButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>changePassword</name> <operator>=</operator> <operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Change Password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				
				<decl_stmt><decl><type><name>boolean</name></type> <name>ifChanged</name><init>=<expr><call><name><name>Login</name><operator>.</operator><name>changePassword</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><name>ifChanged</name></expr>)</condition><then><block>{
					
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Password Updated"</literal></expr></argument>, <argument><expr><literal type="string">"Authenticate"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name>currentPasswordTxt</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>checkButton</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>newPasswordTxtLbl</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>newPasswordTxt</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				
					}</block></then>
				<else>else<block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Password NOT Updated"</literal></expr></argument>, <argument><expr><literal type="string">"Authenticate"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
				
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">226</literal></expr></argument>, <argument><expr><literal type="number">199</literal></expr></argument>, <argument><expr><literal type="number">140</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePswdPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>changePassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>changePassword</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>studentJobs</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>tabbedPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Student Jobs"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>studentJobs</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>studentJobs</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BorderLayout</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JTabbedPane</name></type> <name>jobTabPane</name> <init>= <expr><operator>new</operator> <call><name>JTabbedPane</name><argument_list>(<argument><expr><name><name>JTabbedPane</name><operator>.</operator><name>TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>studentJobs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobTabPane</name></expr></argument>, <argument><expr><name><name>BorderLayout</name><operator>.</operator><name>CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JPanel</name></type> <name>postJobPanel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>jobTabPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Post new Job"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>postJobPanel</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name></type> <name>workExp</name> <init>= <expr><operator>new</operator> <call><name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>workExp</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">254</literal></expr></argument>, <argument><expr><literal type="number">112</literal></expr></argument>, <argument><expr><literal type="number">88</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>workExp</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Double</name><index>[]</index></name> <block>{<expr><literal type="number">1.0</literal></expr>, <expr><literal type="number">1.5</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">2.5</literal></expr>, <expr><literal type="number">3.0</literal></expr>, <expr><literal type="number">3.5</literal></expr>, <expr><literal type="number">4.0</literal></expr>}</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>workExp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>workExp</name><operator>.</operator><name>setSelectedIndex</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblWorkEx</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Work Ex"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblWorkEx</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblWorkEx</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">163</literal></expr></argument>, <argument><expr><literal type="number">115</literal></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblWorkEx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name></type> <name>reqdminimumGPA</name> <init>= <expr><operator>new</operator> <call><name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdminimumGPA</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">254</literal></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>, <argument><expr><literal type="number">88</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>reqdminimumGPA</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Double</name><index>[]</index></name> <block>{<expr><literal type="number">2.5</literal></expr>, <expr><literal type="number">3.0</literal></expr>, <expr><literal type="number">3.5</literal></expr>, <expr><literal type="number">3.6</literal></expr>, <expr><literal type="number">3.7</literal></expr>, <expr><literal type="number">3.8</literal></expr>, <expr><literal type="number">4.0</literal></expr>}</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdminimumGPA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>reqdminimumGPA</name><operator>.</operator><name>setSelectedIndex</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblMinimumGpa</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Minimum GPA"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblMinimumGpa</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblMinimumGpa</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">133</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">84</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblMinimumGpa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JCheckBox</name></type> <name>reqdSkill1</name> <init>= <expr><operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdSkill1</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">274</literal></expr></argument>, <argument><expr><literal type="number">153</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdSkill1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JCheckBox</name></type> <name>reqdSkill2</name> <init>= <expr><operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdSkill2</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">274</literal></expr></argument>, <argument><expr><literal type="number">179</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdSkill2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JCheckBox</name></type> <name>reqdSkill3</name> <init>= <expr><operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill3"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdSkill3</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">274</literal></expr></argument>, <argument><expr><literal type="number">205</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdSkill3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JCheckBox</name></type> <name>reqdSkill4</name> <init>= <expr><operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill4"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdSkill4</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">274</literal></expr></argument>, <argument><expr><literal type="number">231</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdSkill4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>JCheckBox</name></type> <name>reqdSkill5</name> <init>= <expr><operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill5"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reqdSkill5</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">274</literal></expr></argument>, <argument><expr><literal type="number">257</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reqdSkill5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>selectReqdSkills</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Please select the skills required for the job"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>selectReqdSkills</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>selectReqdSkills</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">209</literal></expr></argument>, <argument><expr><literal type="number">246</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>selectReqdSkills</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>postJob</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Post Job"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>postJob</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>arg0</name></decl></param>)</parameter_list> <block>{
				
				<try>try <block>{
					<decl_stmt><decl><type><name>int</name></type> <name>check</name><init>=<expr><call><name><name>Job</name><operator>.</operator><name>postJob</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>dept</name><operator>.</operator><name>getDepartmentID</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><operator>(</operator><name>Double</name><operator>)</operator><call><name><name>reqdminimumGPA</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>
							,<argument><expr><operator>(</operator><name>Double</name><operator>)</operator> <call><name><name>workExp</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill1</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill2</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill3</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, 
							<argument><expr><call><name><name>reqdSkill4</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill5</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if>if<condition>(<expr><name>check</name><operator>!=</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Job posted "</literal></expr></argument>, <argument><expr><literal type="string">"Job Posted"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name>initializeCurrentJobPostiongs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
							<decl_stmt><decl><type><name><name>LinkedHashMap</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>, <argument><name>Student</name></argument>&gt;</argument_list></name></type> <name>retreivedList</name><init>=<expr><call><name><name>JobApplication</name><operator>.</operator><name>retreiveMatchingStudents</name></name><argument_list>(<argument><expr><operator>(</operator><name>Double</name><operator>)</operator><call><name><name>reqdminimumGPA</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>, 
									<argument><expr><operator>(</operator><name>Double</name><operator>)</operator> <call><name><name>workExp</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill1</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill2</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill3</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, 
									<argument><expr><call><name><name>reqdSkill4</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reqdSkill5</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							
							<decl_stmt><decl><type><name>int</name></type> <name>returned</name><init>=<expr><call><name><name>retreivedList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
							<if>if<condition>(<expr><name>returned</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
								<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"No students match the requirements "</literal></expr></argument>, <argument><expr><literal type="string">"Job Posted"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							
<comment type="line">//							jobTabPane.remove(retreiveStudentsPanel);</comment>
<comment type="line">//							jobTabPane.addTab("Retrieved Students",null,getRetrievedStudentsPanel(retreivedList),null);</comment>
							
							<decl_stmt><decl><type><name>JFrame</name></type> <name>retrievedFrame</name> <init>= <expr><call><name>getRetrievedStudentsPanel</name><argument_list>(<argument><expr><name>retreivedList</name></expr></argument>,<argument><expr><name>check</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name>retrievedFrame</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name>retrievedFrame</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name>prof</name><operator>=</operator><operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
			
					
					
				}</block> <catch>catch <parameter_list>(<param><decl><type><name>NumberFormatException</name></type>  <name>e</name></decl></param>)</parameter_list> <block>{
					
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Error in adding"</literal></expr></argument>, <argument><expr><literal type="string">"Job not Posted"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>Job</name><operator>.</operator><name>NoPermissionException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
					
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Error in adding"</literal></expr></argument>, <argument><expr><literal type="string">"Job not Posted"</literal></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name></type> <name>e1</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"Access denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name></type> <name>e2</name></decl></param>)</parameter_list> <block>{
					<expr_stmt><expr><call><name><name>JOptionPane</name><operator>.</operator><name>showMessageDialog</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"This person does not exist in the database"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>e2</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>

			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJob</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">234</literal></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="number">137</literal></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>postJob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblPleaseEnter</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Please Enter the Minimum Requirements"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblPleaseEnter</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblPleaseEnter</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><literal type="number">240</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>postJobPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblPleaseEnter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JPanel</name></type> <name>rePostPanel</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>jobTabPane</name><operator>.</operator><name>addTab</name></name><argument_list>(<argument><expr><literal type="string">"Re post Job"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>rePostPanel</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>rePostPanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>getByJobID</name> <operator>=</operator> <operator>new</operator> <call><name><name>JComboBox</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>getByJobID</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				
				<decl_stmt><decl><type><name>int</name></type> <name>jobId</name><init>=<expr><call><name><name>getByJobID</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><call><name><name>getByJobID</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>Job</name></type> <name>j</name><init>=<expr><operator>new</operator> <call><name>Job</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name>initializeJobDetails</name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>getByJobID</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">182</literal></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>, <argument><expr><literal type="number">129</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>rePostPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>getByJobID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblRepostJobBy</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Repost Job By Job ID"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblRepostJobBy</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblRepostJobBy</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>, <argument><expr><literal type="number">132</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>rePostPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblRepostJobBy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JButton</name></type> <name>reselectBtn</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Re-select Students"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>reselectBtn</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>reselectBtn</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>arg0</name></decl></param>)</parameter_list> <block>{

				<decl_stmt><decl><type><name>int</name></type> <name>jobID</name><init>=<expr><call>(<name>Integer</name>)<argument_list>(<argument><expr><call><name><name>getByJobID</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<decl_stmt><decl><type><name>Job</name></type> <name>job</name><init>=<expr><call><name><name>retreiveJobs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>jobID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<decl_stmt><decl><type><name><name>LinkedHashMap</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>, <argument><name>Student</name></argument>&gt;</argument_list></name></type> <name>reSelect</name><init>=<expr><call><name><name>JobApplication</name><operator>.</operator><name>rePost</name></name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getReqdMinimumGPA</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getReqdMinimumWorkExperience</name></name><argument_list>()</argument_list></call></expr></argument>, 
																<argument><expr><call><name><name>job</name><operator>.</operator><name>isSkillset1</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>isSkillset2</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>isSkillset3</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>job</name><operator>.</operator><name>isSkillset4</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>job</name><operator>.</operator><name>isSkillset5</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>job</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
<comment type="line">//				jobTabPane.addTab("Re Select",null,getRetrievedStudentsPanel(reSelect, getByJobID.getItemAt(getByJobID.getSelectedIndex())),null);</comment>
				<decl_stmt><decl><type><name>JFrame</name></type> <name>retrievedFrame</name> <init>= <expr><call><name>getRetrievedStudentsPanel</name><argument_list>(<argument><expr><name>reSelect</name></expr></argument>,<argument><expr><name>jobID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>retrievedFrame</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">800</literal></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>retrievedFrame</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line">//jobPost=new Job(jobID);</comment>
				<expr_stmt><expr><call><name>initializeCurrentJobPostiongs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>initializeViewDetails</name><argument_list>(<argument><expr><name>prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block></function>
		
		
		
		
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>reselectBtn</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">417</literal></expr></argument>, <argument><expr><literal type="number">121</literal></expr></argument>, <argument><expr><literal type="number">141</literal></expr></argument>, <argument><expr><literal type="number">75</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>rePostPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reselectBtn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>jobDetailsPanel</name> <operator>=</operator> <operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><literal type="number">82</literal></expr></argument>, <argument><expr><literal type="number">282</literal></expr></argument>, <argument><expr><literal type="number">250</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>rePostPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobDetailsPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblRequiredWorkExperience</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Required Work Experience"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredWorkExperience</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredWorkExperience</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>, <argument><expr><literal type="number">151</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblRequiredWorkExperience</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblRequiredGpa</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Required GPA"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredGpa</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredGpa</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">68</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">83</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblRequiredGpa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retSkill1</name> <operator>=</operator> <operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill1</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">154</literal></expr></argument>, <argument><expr><literal type="number">66</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retSkill1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retSkill2</name> <operator>=</operator> <operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill2</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">154</literal></expr></argument>, <argument><expr><literal type="number">95</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retSkill2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retSkill3</name> <operator>=</operator> <operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill3</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">154</literal></expr></argument>, <argument><expr><literal type="number">124</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retSkill3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retSkill4</name> <operator>=</operator> <operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill 4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill4</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">154</literal></expr></argument>, <argument><expr><literal type="number">151</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retSkill4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retSkill5</name> <operator>=</operator> <operator>new</operator> <call><name>JCheckBox</name><argument_list>(<argument><expr><literal type="string">"Skill 5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill5</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">154</literal></expr></argument>, <argument><expr><literal type="number">177</literal></expr></argument>, <argument><expr><literal type="number">97</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retSkill5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>JLabel</name></type> <name>lblRequiredSetOf</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"Required set of Skills"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredSetOf</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Tahoma"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lblRequiredSetOf</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">124</literal></expr></argument>, <argument><expr><literal type="number">118</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lblRequiredSetOf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retWorkExp</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"aa"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retWorkExp</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retWorkExp</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">161</literal></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retWorkExp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>retGPA</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">"aa"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retGPA</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"Arial"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retGPA</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><literal type="number">161</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>jobDetailsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>retGPA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name>initializeCurrentJobPostiongs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		
	
	
	}</block></constructor>


	
	<function><type><specifier>public</specifier> <name>JFrame</name></type> <name>getRetrievedStudentsPanel</name><parameter_list>(<param><decl><type><name><name>LinkedHashMap</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>, <argument><name>Student</name></argument>&gt;</argument_list></name></type> <name>getStudents</name></decl></param>, <param><decl><type><name>int</name></type> <name>jodID</name></decl></param>)</parameter_list><block>{
		<decl_stmt><decl><type><name>JFrame</name></type> <name>jFramePop</name> <init>= <expr><operator>new</operator> <call><name>JFrame</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>jFramePop</name><operator>.</operator><name>getContentPane</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridLayout</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<for>for<control>(<init><decl><type><name>Integer</name></type> <name>i</name><range>: <expr><call><name><name>getStudents</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block>{
			<decl_stmt><decl><type><name>Student</name></type> <name>s</name><init>= <expr><call><name><name>getStudents</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>jFramePop</name><operator>.</operator><name>getContentPane</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><call><name>makePanel</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>jodID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<return>return <expr><name>jFramePop</name></expr>;</return>
	}</block></function>
	

	<function><type><specifier>public</specifier> <name>JPanel</name></type> <name>makePanel</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>Student</name></type> <name>student</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>int</name></type> <name>jobID</name></decl></param>)</parameter_list><block>{
		
		<comment type="line">//LinkedHashMap&lt;Integer, Student&gt; retreive1= new LinkedHashMap&lt;Integer, Student&gt;();</comment>
		<decl_stmt><decl><type><name>JPanel</name></type> <name>p</name> <init>= <expr><operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridLayout</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>JLabel</name></type> <name>t</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line">//Object key = retreive.keySet().iterator().next();</comment>
		
		<expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">"The name is: "</literal><operator>+</operator><call><name><name>student</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>JButton</name></type> <name>sendEmail</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><literal type="string">"Send Email to "</literal><operator>+</operator><call><name><name>student</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>sendEmail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<expr_stmt><expr><call><name><name>sendEmail</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ActionListener</name></super><argument_list>()</argument_list> <block>{
			<comment type="line">//@Override</comment>
			<function><type><specifier>public</specifier> <name>void</name></type> <name>actionPerformed</name><parameter_list>(<param><decl><type><name>ActionEvent</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
				
				
				<comment type="line">// TODO Auto-generated method stub</comment>
				
				<decl_stmt><decl><type><name>boolean</name></type> <name>isSent</name><init>=<expr><call><name><name>Job</name><operator>.</operator><name>sendEmail</name></name><argument_list>(<argument><expr><name>jobID</name></expr></argument>,<argument><expr><name>student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<if>if<condition>(<expr><name>isSent</name></expr>)</condition><then><block>{
					<expr_stmt><expr><call><name><name>sendEmail</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		
		<return>return <expr><name>p</name></expr>;</return>
	}</block></function>


	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeCurrentJobPostiongs</name><parameter_list>()</parameter_list><block>{
		
		<expr_stmt><expr><name>retreiveJobs</name><operator>=</operator><call><name><name>Job</name><operator>.</operator><name>getAllJobsBySingleProfessor</name></name><argument_list>(<argument><expr><name>prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>jobIDs</name><init>=<expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>model</name><init>=<expr><operator>new</operator> <call><name><name>DefaultComboBoxModel</name><argument_list type="template">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<for>for<control>(<init><decl><type><name>Integer</name></type> <name>i</name><range>: <expr><call><name><name>retreiveJobs</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block>{
			<expr_stmt><expr><call><name><name>jobIDs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>model</name><operator>.</operator><name>addElement</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
		}</block></for>
		
		<expr_stmt><expr><call><name><name>getByJobID</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	

	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeViewDetails</name><parameter_list>(<param><decl><type><name>Professor</name></type> <name>prof</name></decl></param>)</parameter_list><block>{
		
		<try>try <block>{
			<expr_stmt><expr><name><name>ProfessorUserUI</name><operator>.</operator><name>prof</name></name><operator>=</operator><operator>new</operator> <call><name>Professor</name><argument_list>(<argument><expr><call><name><name>ProfessorUserUI</name><operator>.</operator><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>profName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>profUIn</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal><operator>+</operator><call><name><name>prof</name><operator>.</operator><name>getUIN</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>profUserName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>profDept</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>dept</name><operator>.</operator><name>getDepartmentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>presentName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>currentUserName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>currentOfficeHours</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeHours</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>CurrentOfficeAddress</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>officeAddress</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>officeHours</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>prof</name><operator>.</operator><name>getOfficeHours</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name>revalidate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>repaint</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			
		}</block> <catch>catch <parameter_list>(<param><decl><type><name><name>Student</name><operator>.</operator><name>AccessDeniedException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
			<comment type="line">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch> <catch>catch <parameter_list>(<param><decl><type><name><name>People</name><operator>.</operator><name>PersonDoesNotExistException</name></name></type> <name>e</name></decl></param>)</parameter_list> <block>{
			<comment type="line">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		
		
		

		
	}</block></function>
	
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>initializeJobDetails</name><parameter_list>(<param><decl><type><name>Job</name></type> <name>jobPost</name></decl></param>)</parameter_list><block>{
		
		<expr_stmt><expr><call><name><name>retGPA</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal><operator>+</operator><call><name><name>jobPost</name><operator>.</operator><name>getReqdMinimumGPA</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retWorkExp</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal><operator>+</operator><call><name><name>jobPost</name><operator>.</operator><name>getReqdMinimumWorkExperience</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill1</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><call><name><name>jobPost</name><operator>.</operator><name>isSkillset1</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill2</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><call><name><name>jobPost</name><operator>.</operator><name>isSkillset2</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill3</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><call><name><name>jobPost</name><operator>.</operator><name>isSkillset3</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill4</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><call><name><name>jobPost</name><operator>.</operator><name>isSkillset4</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>retSkill5</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><call><name><name>jobPost</name><operator>.</operator><name>isSkillset5</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		

		
	}</block></function>
}</block></class>
</unit>
